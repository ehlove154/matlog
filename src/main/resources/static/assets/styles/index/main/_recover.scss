@use "sass:color";

@import "../../_def";

#main > #recoverForm {
  @include flex(column, stretch, center, 1rem);
  margin: auto;
  width: 50rem;

  > .title {
    font-size: 1.7rem;
    font-weight: 500;
  }

  > .type {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(2, 1fr);

    > [data-mt-object="label"] {
      @include flex(column, stretch, flex-start, 0.75rem);
      background-color: #ffffff;
      border: 0.0625rem solid #eeecee;
      border-radius: 0.25rem;
      cursor: pointer;
      padding: 1rem 1.25rem;

      &:hover {
        border-color: #e0e2e4;
      }

      &:has(>input:checked) {
        border-color: $global_color-accent;
        outline: 0.025rem solid $global_color-accent;
      }

      > input {
        display: none;
      }

      > .title {
        font-size: 1.25rem;
        font-weight: 400;
      }

      > .message {
        line-height: 1.375;
        text-align: justify;
      }
    }
  }

  > .container {
    display: none;
    margin: 0.625rem 0;

    &.empty {
      @include flex(column, center, center);
      background-color: #ffffff;
      border: 0.0625rem solid #eeecee;
      border-radius: 0.25rem;
      padding: 2rem 2.5rem;
    }

    &.email, &.password {
      @include flex(column, stretch, flex-start, 0.375rem);
      display: none;
      width: 30rem;
      align-self: center;
    }
  }

  > .type:has(> label > .input[value="email"]:checked) {
    ~ .container.empty {
      display: none;
    }

    ~ .container.email {
      display: flex;
    }
  }

  > .type:has(> label > .input[value="password"]:checked) {
    ~ .container.empty {
      display: none;
    }

    ~ .container.password {
      display: flex;
    }
  }

  > .container.email,
  > .container.password {

    > [data-mt-object="label"] {
      margin-bottom: 1rem;
    }

    > [data-mt-name="email"],
    > [data-mt-name="password"] {
      > [data-mt-component="label.row"] {
        //@include flex(row, stretch, flex-start, 0.375rem);

        > [data-mt-object="field"]:disabled {
          border: 0.0625rem solid $global-color-border-lighten-50;
        }

        > [data-mt-object="button"]:disabled {
          background-color: $global-color-border-lighten-50;
          border: 0.0625rem solid $global-color-border-lighten-50;
          cursor: auto;
      }

        > [data-mt-component="label.field"] {
          flex-grow: 1;
        }

        > .gender-wrapper {
          background-color: #ffffff;
          border: 0.0625rem solid #e0e2e4;
          border-radius: 0.25rem;
          display: grid;
          grid-template-columns: repeat(2, 1fr);
          overflow: hidden;
          flex-grow: 1;

          > label {
            @include flex(row, center, center);
            cursor: pointer;
            padding: 0.625rem;

            &:has(> input:checked) {
              background-color: $global_color-primary;

              > span {
                color: $global_color-accent;
              }
            }

            + input {
              border-left: 0.0625rem solid #e0e2e4;
            }

            > input {
              display: none;
            }
          }
        }
      }
    }
  }

  > .button-container {
    @include flex(row, stretch, flex-end, 0.375rem);

    > [data-mt-object="button"] {
      padding: 0.35rem 1rem;

      > span {
        font-size: 0.9rem;
      }

      > .icon {
        scale: 70%;

        &.next {
          filter: invert(93%) sepia(30%) saturate(323%) hue-rotate(2deg) brightness(107%) contrast(97%);
          margin-right: -0.6rem;
        }

        &.cancel {
          margin-left: -0.3rem;
        }
      }
    }
  }
}

@media screen and (max-width: 60rem) {
  #main > #recoverForm {
    width: 40rem;
  }
}

  @media screen and (max-width: 50rem) {
    #main > #recoverForm {
      width: 30rem;

      > .container {
        &.email, &.password {
          width: 20rem;
        }
      }
    }
  }

  @media screen and (max-width: 40rem) {
    #main > #recoverForm {
      width: 20rem;
    }
  }