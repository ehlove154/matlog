@use "sass:color";

$player-controller-height: 4.0625rem;

@import "../../_def";


#main > .player {
  @include flex(column, stretch, flex-start);
  bottom: 0;
  position: sticky;
  display: none;

  &:has(> .playlist[data-mt-visible]) {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    position: absolute;
  }

  &[data-mt-visible] {
    display: flex;
  }

  > .playlist {
    @include flex(column, stretch, flex-start);
    @include fixedHeight(calc(100% - $player-controller-height));
    backdrop-filter: blur(0.5rem);
    background: #141315;
    background: linear-gradient(60deg, #141315e0 0%, #21181ee0 100%);
    display: none;

    &[data-mt-visible] {
      display: flex;
    }

    > .button-container {
      @include flex(row, center, flex-start, 0.5rem);
      padding: 0.875rem 1.25rem;

      > .label {
        padding: 0.375rem;

        > input:checked + .icon {
          filter: brightness(100%);
        }

        > .icon {
          @include fixedSize(1.25rem);
          filter: brightness(50%);
          transition-duration: 175ms;
          transition-property: filter;
          transition-timing-function: ease;
        }
      }
    }

    > .list {
      @include flex(column, stretch, flex-start);

      > .message {
        @include flex(column, center, center, 0.5rem);
        color: $global-color-text-darken-30;
        display: none;
        padding: 2rem 0;
        line-height: 1.5;
        text-align: center;

        &[data-mt-visible] {
          display: flex;
        }
      }

      > .item  {
        @include flex(row, center, flex-start, 0.5rem);
        border-top: 0.0625rem solid $global-color-border-lighten-5;
        cursor: pointer;
        padding: 0.625rem 1.25rem;

        &.-playing {
          color: $global-color-concept;
          font-weight: 500;
        }

        &:last-child {
          border-bottom: 0.0625rem solid $global-color-border-lighten-5;
        }

        > .cover {
          @include fixedSize(2.5rem);
          border: 0.0625rem solid $global-color-border;
          object-fit: cover;
          object-position: center;
        }

        > .name {
          @include flex(column, stretch, flex-start, 0.25rem);
          flex-grow: 1;
          flex-shrink: 1;

          > .artist {
            color: $global-color-text-darken-30;
            font-size: 0.825rem;
            font-weight: 400;
          }
        }
      }
    }
  }

  > .progress {
    height: 0.1rem;
    background-color: $global-color-background-lighten-5;
    position: relative;

    > .value {
      top: 0;
      left: 0;
      width: 33%;
      height: 100%;
      background-color: $global-color-concept;
      position: absolute;
      z-index: 0;
    }

    > .pointer {
      width: 0.625rem;
      height: 0.625rem;
      top: 50%;
      left: 33%;
      background-color: $global-color-concept;
      border-radius: 999rem;
      position: absolute;
      transform: scale(75%) translateY(-50%);
      transform-origin: top left;
      transition-duration: 175ms;
      transition-property: width, height;
      transition-timing-function: ease;
      z-index: 1;

      &:hover {
        width: 0.825rem;
        height: 0.825rem;
      }
    }
  }

  > .controller {
    @include flex(row, center, flex-start, 0.5rem);
    backdrop-filter: blur(0.5rem);
    background: #141315;
    background: linear-gradient(60deg, #141315e0 0%, #21181ee0 100%);
    border-top: 0.1rem solid $global-color-background;
    padding: 0.875rem 1.25rem;
    cursor: pointer;

    > .cover {
      @include fixedSize(2.25rem);
      border: 0.0625rem solid $global-color-border;
      border-radius: 0.25rem;
      object-fit: cover;
      object-position: center;
      overflow: hidden;
    }

    > .caption {
      @include flex(column, stretch, center, 0.125rem);

      > .name,
      > .artist {
        max-width: 7rem;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      > .artist {
        color: $global-color-text-darken-30;
        font-size: 0.825rem;
        font-weight: 400;
      }
    }

    > .time {
      color: $global-color-text-darken-30;
      font-size: 0.825rem;
      font-weight: 400;
    }

    > .button-container {
      @include flex(row, center, center, 0.5rem);

      > button {
        display: none;
        cursor: pointer;

        &[data-mt-visible] {
          display: revert;
        }

        &[name="play"],
        &[name="pause"] > .icon {
          @include fixedSize(2rem);
        }

        > .icon {
          @include fixedSize(1.5rem);
          filter: brightness(90%);
          transition-duration: 175ms;
          transition-property: filter;
          transition-timing-function: ease;
        }
      }
    }
  }
}